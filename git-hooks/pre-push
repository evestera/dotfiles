#!/bin/bash

if [[ -f "$(git pwd)/.git/hooks/pre-push" ]]; then
  "$(git pwd)/.git/hooks/pre-push" || exit 1;
fi

if [[ -n "$(git config --local filter.lfs.clean)" ]]; then
  echo "Running Git LFS pre-push";
  git lfs pre-push "$@";
fi

# Base taken from:
# https://github.com/git/git/blob/69c786637d7a7fe3b2b8f7d989af095f5f49c3a8/templates/hooks--pre-push.sample
#
# pre-push is called with the following parameters:
#
# $1 -- Name of the remote to which the push is being done
# $2 -- URL to which the push is being done
#
# If pushing without using a named remote those arguments will be equal.
#
# Information about the commits which are being pushed is supplied as lines to
# the standard input in the form:
#
#   <local ref> <local oid> <remote ref> <remote oid>

remote="$1"
url="$2"

zero=$(git hash-object --stdin </dev/null | tr '[0-9a-f]' '0')

while read local_ref local_oid remote_ref remote_oid
do
	if test "$local_oid" = "$zero"
	then
		# Handle delete
		:
	else
		if test "$remote_oid" = "$zero"
		then
			# New branch, examine all commits
			range="$local_oid"
		else
			# Update to existing branch, examine new commits
			range="$remote_oid..$local_oid"
		fi

		# Check for WIP commit
		commit=$(git rev-list -n 1 --grep '^nopush' "$range")
		if test -n "$commit"
		then
			echo >&2 "Found commit with nopush prefix in $local_ref, not pushing"
			exit 1
		fi
	fi
done

exit 0
